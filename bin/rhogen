#!/usr/bin/env ruby
require 'fileutils'
include FileUtils

def write(file)
  File.open(file,'w') {|f| f.puts "'#{file}'"}
end

case ARGV[0]
when 'app'
  [ "app/application.rb",
    "app/helpers/application_helper.rb",
    "app/helpers/browser_helper.rb",
    "app/index.bb.erb",
    "app/index.erb",
    "app/layout.erb",
    "app/loading.html",
    "app/Settings/controller.rb",
    "app/Settings/home.bb.erb",
    "app/Settings/home.erb",
    "app/Settings/index.bb.erb",
    "app/Settings/index.erb",
    "app/Settings/login.bb.erb",
    "app/Settings/login.erb",
    "app/Settings/reset.bb.erb",
    "app/Settings/reset.erb",
    "app/Settings/wait.bb.erb",
    "app/Settings/wait.erb",
    "build.yml",
    "icon/icon.ico",
    "icon/icon.png",
    "public/css/android.css",
    "public/css/blackberry.css",
    "public/css/iphone.css",
    "public/css/webkit.css",
    "public/css/windows_mobile.css",
    "public/images/android/btn_check_off.png",
    "public/images/android/btn_check_on.png",
    "public/images/android/btn_radio_off.png",
    "public/images/android/btn_radio_on.png",
    "public/images/android/disclosure.png",
    "public/images/android/ic_menu_more.png",
    "public/images/backButton.png",
    "public/images/blueButton.png",
    "public/images/cancel.png",
    "public/images/grayButton.png",
    "public/images/iphone/disclosure.png",
    "public/images/iphone/disclosure_detail.png",
    "public/images/iphone/radiobutton.png",
    "public/images/iphone/select.png",
    "public/images/iphone/switch.png",
    "public/images/iui-logo-touch-icon.png",
    "public/images/IUI_LICENSE.txt",
    "public/images/listArrow.png",
    "public/images/listArrowDown.png",
    "public/images/listArrowSel.png",
    "public/images/listGroup.png",
    "public/images/loading.gif",
    "public/images/pinstripes.png",
    "public/images/right_button.png",
    "public/images/selection.png",
    "public/images/thumb.png",
    "public/images/toggle.png",
    "public/images/toggleOn.png",
    "public/images/toolbar.png",
    "public/images/toolButton.png",
    "public/images/toolButton_new.png",
    "public/images/whiteButton.png",
    "public/js/application.js",
    "public/js/rho.js",
    "public/js/rhogeolocation-wm.js",
    "public/js/rhogeolocation.js",
    "Rakefile",
    "rhoconfig.txt"
  ].each do |template| 
    file = File.join(ARGV[1],template)
    mkdir_p File.join(ARGV[1],File.dirname(template))
    touch file
    write(file)
  end
when 'model'
  [ "app/#{ARGV[1]}/edit.bb.erb",
    "app/#{ARGV[1]}/edit.erb",
    "app/#{ARGV[1]}/index.bb.erb",
    "app/#{ARGV[1]}/index.erb",
    "app/#{ARGV[1]}/new.bb.erb",
    "app/#{ARGV[1]}/new.erb",
    "app/#{ARGV[1]}/#{ARGV[1].downcase}.rb",
    "app/#{ARGV[1]}/#{ARGV[1].downcase}_controller.rb",
    "app/#{ARGV[1]}/show.bb.erb",
    "app/#{ARGV[1]}/show.erb",
    "app/test/#{ARGV[1].downcase}_spec.rb"
  ].each do |template|
    file = File.join(template)
    mkdir_p File.join(File.dirname(template))
    touch file
    write(file)
  end
when 'spec'
  [ "app/fileutils.rb",
    "app/mspec/expectations/expectations.rb",
    "app/mspec/expectations/should.rb",
    "app/mspec/expectations.rb",
    "app/mspec/fileutils.rb",
    "app/mspec/guards/background.rb",
    "app/mspec/guards/bug.rb",
    "app/mspec/guards/compliance.rb",
    "app/mspec/guards/conflict.rb",
    "app/mspec/guards/endian.rb",
    "app/mspec/guards/extensions.rb",
    "app/mspec/guards/guard.rb",
    "app/mspec/guards/noncompliance.rb",
    "app/mspec/guards/platform.rb",
    "app/mspec/guards/quarantine.rb",
    "app/mspec/guards/runner.rb",
    "app/mspec/guards/superuser.rb",
    "app/mspec/guards/support.rb",
    "app/mspec/guards/tty.rb",
    "app/mspec/guards/version.rb",
    "app/mspec/guards.rb",
    "app/mspec/helpers/argv.rb",
    "app/mspec/helpers/bignum.rb",
    "app/mspec/helpers/const_lookup.rb",
    "app/mspec/helpers/ducktype.rb",
    "app/mspec/helpers/enumerator_class.rb",
    "app/mspec/helpers/environment.rb",
    "app/mspec/helpers/fixture.rb",
    "app/mspec/helpers/flunk.rb",
    "app/mspec/helpers/fs.rb",
    "app/mspec/helpers/hash.rb",
    "app/mspec/helpers/infinity.rb",
    "app/mspec/helpers/io.rb",
    "app/mspec/helpers/language_version.rb",
    "app/mspec/helpers/metaclass.rb",
    "app/mspec/helpers/mock_to_path.rb",
    "app/mspec/helpers/nan.rb",
    "app/mspec/helpers/ruby_exe.rb",
    "app/mspec/helpers/scratch.rb",
    "app/mspec/helpers/tmp.rb",
    "app/mspec/helpers.rb",
    "app/mspec/matchers/base.rb",
    "app/mspec/matchers/be_an_instance_of.rb",
    "app/mspec/matchers/be_ancestor_of.rb",
    "app/mspec/matchers/be_close.rb",
    "app/mspec/matchers/be_empty.rb",
    "app/mspec/matchers/be_false.rb",
    "app/mspec/matchers/be_kind_of.rb",
    "app/mspec/matchers/be_nil.rb",
    "app/mspec/matchers/be_true.rb",
    "app/mspec/matchers/complain.rb",
    "app/mspec/matchers/eql.rb",
    "app/mspec/matchers/equal.rb",
    "app/mspec/matchers/equal_element.rb",
    "app/mspec/matchers/equal_utf16.rb",
    "app/mspec/matchers/have_constant.rb",
    "app/mspec/matchers/have_instance_method.rb",
    "app/mspec/matchers/have_method.rb",
    "app/mspec/matchers/have_private_instance_method.rb",
    "app/mspec/matchers/have_public_instance_method.rb",
    "app/mspec/matchers/include.rb",
    "app/mspec/matchers/match_yaml.rb",
    "app/mspec/matchers/method.rb",
    "app/mspec/matchers/output.rb",
    "app/mspec/matchers/output_to_fd.rb",
    "app/mspec/matchers/raise_error.rb",
    "app/mspec/matchers/respond_to.rb",
    "app/mspec/matchers/stringsymboladapter.rb",
    "app/mspec/matchers.rb",
    "app/mspec/mocks/mock.rb",
    "app/mspec/mocks/object.rb",
    "app/mspec/mocks/proxy.rb",
    "app/mspec/mocks.rb",
    "app/mspec/pp.rb",
    "app/mspec/runner/actions/debug.rb",
    "app/mspec/runner/actions/filter.rb",
    "app/mspec/runner/actions/gdb.rb",
    "app/mspec/runner/actions/tag.rb",
    "app/mspec/runner/actions/taglist.rb",
    "app/mspec/runner/actions/tagpurge.rb",
    "app/mspec/runner/actions/tally.rb",
    "app/mspec/runner/actions/timer.rb",
    "app/mspec/runner/actions.rb",
    "app/mspec/runner/context.rb",
    "app/mspec/runner/example.rb",
    "app/mspec/runner/exception.rb",
    "app/mspec/runner/filters/match.rb",
    "app/mspec/runner/filters/profile.rb",
    "app/mspec/runner/filters/regexp.rb",
    "app/mspec/runner/filters/tag.rb",
    "app/mspec/runner/filters.rb",
    "app/mspec/runner/formatters/describe.rb",
    "app/mspec/runner/formatters/dotted.rb",
    "app/mspec/runner/formatters/file.rb",
    "app/mspec/runner/formatters/html.rb",
    "app/mspec/runner/formatters/method.rb",
    "app/mspec/runner/formatters/specdoc.rb",
    "app/mspec/runner/formatters/spinner.rb",
    "app/mspec/runner/formatters/summary.rb",
    "app/mspec/runner/formatters/unit.rb",
    "app/mspec/runner/formatters/yaml.rb",
    "app/mspec/runner/formatters.rb",
    "app/mspec/runner/mspec.rb",
    "app/mspec/runner/object.rb",
    "app/mspec/runner/shared.rb",
    "app/mspec/runner/tag.rb",
    "app/mspec/runner.rb",
    "app/mspec/utils/name_map.rb",
    "app/mspec/utils/options.rb",
    "app/mspec/utils/ruby_name.rb",
    "app/mspec/utils/script.rb",
    "app/mspec/utils/version.rb",
    "app/mspec/version.rb",
    "app/mspec.rb",
    "app/spec_runner.rb",
    "app/SpecRunner/controller.rb",
    "app/SpecRunner/index.erb"
  ].each do |template|
    file = File.join(template)
    mkdir_p File.join(File.dirname(template))
    touch file
    write(file)
  end
end